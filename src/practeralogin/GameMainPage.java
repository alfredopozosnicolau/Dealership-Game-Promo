/*
 * Programmer: Alfredo Pozos Nicolau
 * Created on: 
 * Edit history: 
 */
package practeralogin;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alfredo Pozos Nicolau
 */
public class GameMainPage extends javax.swing.JFrame {
    HashSet<Integer> noRepeatsPromotion = new HashSet();
    HashSet<Integer> noRepeatsMR = new HashSet();
    double users;
    int roundCounter = 1;
    int marketResearchCounter = 0;
    int promotionCounter = 0;
    int totalUserCash = 7500;
    int earnedUsersByRound = 0;
    int earnedCashByRound = 0;
    int codeDiscount = 0;
    int appDiscount = 0;
    int dbDiscount = 0;
    double complexityCounter = 0;
    double techUserBonus = 0;
    double complexityPenalty = 0;
    double promotionBonus = 0;
    double launchBonus = 0;
    double cashBonus = 0;
    boolean appLaunched = false;
    placemat pm = new placemat();
    
    /**
     * Creates new form GameMainPage
     */
    public GameMainPage() {
        initComponents();
        
        pm.setTitle("INSTRUCTIONS");
        pm.setVisible(true);
        tfRoundDisplay.setEditable(false); //This will make the round display text field only be set to read only
        tfCurrentUserDisplay.setEditable(false); //This will make the current app user display only be set to read only
        tfCurrentCashDisplay.setEditable(false); //This will make the current cash amount display only be set to read only
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkboxH4 = new javax.swing.JCheckBox();
        checkboxMaN4 = new javax.swing.JCheckBox();
        checkboxH5 = new javax.swing.JCheckBox();
        checkboxMaN5 = new javax.swing.JCheckBox();
        checkboxI4 = new javax.swing.JCheckBox();
        checkboxMaN6 = new javax.swing.JCheckBox();
        checkboxI5 = new javax.swing.JCheckBox();
        checkboxN4 = new javax.swing.JCheckBox();
        checkboxI6 = new javax.swing.JCheckBox();
        checkboxN5 = new javax.swing.JCheckBox();
        checkboxMU4 = new javax.swing.JCheckBox();
        checkboxN6 = new javax.swing.JCheckBox();
        checkboxMU5 = new javax.swing.JCheckBox();
        checkboxS4 = new javax.swing.JCheckBox();
        checkboxMU6 = new javax.swing.JCheckBox();
        checkboxS5 = new javax.swing.JCheckBox();
        checkboxUI4 = new javax.swing.JCheckBox();
        checkboxUI5 = new javax.swing.JCheckBox();
        checkboxUI6 = new javax.swing.JCheckBox();
        checkboxS6 = new javax.swing.JCheckBox();
        checkboxH6 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        checkboxUserInterface1 = new javax.swing.JCheckBox();
        checkboxUserInterface2 = new javax.swing.JCheckBox();
        checkboxUserInterface3 = new javax.swing.JCheckBox();
        checkboxMenusAndNavigation1 = new javax.swing.JCheckBox();
        checkboxMenusAndNavigation2 = new javax.swing.JCheckBox();
        checkboxMenusAndNavigation3 = new javax.swing.JCheckBox();
        checkboxNotifications1 = new javax.swing.JCheckBox();
        checkboxNotifications2 = new javax.swing.JCheckBox();
        checkboxNotifications3 = new javax.swing.JCheckBox();
        checkboxSearch1 = new javax.swing.JCheckBox();
        checkboxSearch2 = new javax.swing.JCheckBox();
        checkboxSearch3 = new javax.swing.JCheckBox();
        checkboxHardware1 = new javax.swing.JCheckBox();
        checkboxHardware2 = new javax.swing.JCheckBox();
        checkboxHardware3 = new javax.swing.JCheckBox();
        checkboxIntegration2 = new javax.swing.JCheckBox();
        checkboxIntegration3 = new javax.swing.JCheckBox();
        checkboxIntegration1 = new javax.swing.JCheckBox();
        checkboxMultiUser2 = new javax.swing.JCheckBox();
        checkboxMultiUser3 = new javax.swing.JCheckBox();
        checkboxMultiUser1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        checkboxStorage2 = new javax.swing.JCheckBox();
        checkboxStorage3 = new javax.swing.JCheckBox();
        checkboxMarketplace2 = new javax.swing.JCheckBox();
        checkboxMarketplace3 = new javax.swing.JCheckBox();
        checkboxMarketplace1 = new javax.swing.JCheckBox();
        checkboxAnalytics2 = new javax.swing.JCheckBox();
        checkboxAnalytics3 = new javax.swing.JCheckBox();
        checkboxAnalytics1 = new javax.swing.JCheckBox();
        checkboxLocation1 = new javax.swing.JCheckBox();
        checkboxLocation2 = new javax.swing.JCheckBox();
        checkboxLocation3 = new javax.swing.JCheckBox();
        checkboxMedia1 = new javax.swing.JCheckBox();
        checkboxMedia2 = new javax.swing.JCheckBox();
        checkboxMedia3 = new javax.swing.JCheckBox();
        checkboxSync1 = new javax.swing.JCheckBox();
        checkboxSync2 = new javax.swing.JCheckBox();
        checkboxSocial1 = new javax.swing.JCheckBox();
        checkboxSocial2 = new javax.swing.JCheckBox();
        checkboxSocial3 = new javax.swing.JCheckBox();
        checkboxSync3 = new javax.swing.JCheckBox();
        checkboxStorage1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        checkboxExternalAPI3 = new javax.swing.JCheckBox();
        checkboxPrivacy1 = new javax.swing.JCheckBox();
        checkboxPrivacy2 = new javax.swing.JCheckBox();
        checkboxPrivacy3 = new javax.swing.JCheckBox();
        checkboxAnalyticsInfrastructure2 = new javax.swing.JCheckBox();
        checkboxAnalyticsInfrastructure3 = new javax.swing.JCheckBox();
        checkboxAnalyticsInfrastructure1 = new javax.swing.JCheckBox();
        checkboxSecurity2 = new javax.swing.JCheckBox();
        checkboxSecurity3 = new javax.swing.JCheckBox();
        checkboxSecurity1 = new javax.swing.JCheckBox();
        checkboxApplicationServer1 = new javax.swing.JCheckBox();
        checkboxApplicationServer2 = new javax.swing.JCheckBox();
        checkboxApplicationServer3 = new javax.swing.JCheckBox();
        checkboxDatabaseServer1 = new javax.swing.JCheckBox();
        checkboxDatabaseServer2 = new javax.swing.JCheckBox();
        checkboxDatabaseServer3 = new javax.swing.JCheckBox();
        checkboxExternalAPI1 = new javax.swing.JCheckBox();
        checkboxExternalAPI2 = new javax.swing.JCheckBox();
        checkboxCode1 = new javax.swing.JCheckBox();
        checkboxCode2 = new javax.swing.JCheckBox();
        checkboxCode3 = new javax.swing.JCheckBox();
        buttonSubmitRound = new javax.swing.JButton();
        buttonLaunchApp = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfRoundDisplay = new javax.swing.JTextField();
        tfCurrentUserDisplay = new javax.swing.JTextField();
        tfCurrentCashDisplay = new javax.swing.JTextField();
        buttonBuyPromotionCard = new javax.swing.JButton();
        buttonBuyMarketResearchCard = new javax.swing.JButton();

        checkboxH4.setText("Hardware Level 2");

        checkboxMaN4.setText("Menus and Navigation Level 1");
        checkboxMaN4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMaN4ActionPerformed(evt);
            }
        });

        checkboxH5.setText("Hardware Level 3");
        checkboxH5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxH5ActionPerformed(evt);
            }
        });

        checkboxMaN5.setText("Menus and Navigation Level 2");

        checkboxI4.setText("Integration Level 2");

        checkboxMaN6.setText("Menus and Navigation Level 3");
        checkboxMaN6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMaN6ActionPerformed(evt);
            }
        });

        checkboxI5.setText("Integration Level 3");
        checkboxI5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxI5ActionPerformed(evt);
            }
        });

        checkboxN4.setText("Notifications Level 1");
        checkboxN4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxN4ActionPerformed(evt);
            }
        });

        checkboxI6.setText("Integration Level 1");
        checkboxI6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxI6ActionPerformed(evt);
            }
        });

        checkboxN5.setText("Notifications Level 2");

        checkboxMU4.setText("Multi-user Level 2");

        checkboxN6.setText("Notifications Level 3");
        checkboxN6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxN6ActionPerformed(evt);
            }
        });

        checkboxMU5.setText("Multi-user Level 3");
        checkboxMU5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMU5ActionPerformed(evt);
            }
        });

        checkboxS4.setText("Search Level 1");
        checkboxS4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxS4ActionPerformed(evt);
            }
        });

        checkboxMU6.setText("Multi-user Level 1");
        checkboxMU6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMU6ActionPerformed(evt);
            }
        });

        checkboxS5.setText("Search Level 2");

        checkboxUI4.setText("User Interface Level 1");
        checkboxUI4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxUI4ActionPerformed(evt);
            }
        });

        checkboxUI5.setText("User Interface Level 2");

        checkboxUI6.setText("User Interface Level 3");
        checkboxUI6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxUI6ActionPerformed(evt);
            }
        });

        checkboxS6.setText("Search Level 3");
        checkboxS6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxS6ActionPerformed(evt);
            }
        });

        checkboxH6.setText("Hardware Level 1");
        checkboxH6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxH6ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/practerlogin/icons/frontend.png"))); // NOI18N

        checkboxUserInterface1.setText("User Interface Level 1");
        checkboxUserInterface1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxUserInterface1ActionPerformed(evt);
            }
        });

        checkboxUserInterface2.setText("User Interface Level 2");
        checkboxUserInterface2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxUserInterface2ActionPerformed(evt);
            }
        });

        checkboxUserInterface3.setText("User Interface Level 3");
        checkboxUserInterface3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxUserInterface3ActionPerformed(evt);
            }
        });

        checkboxMenusAndNavigation1.setText("Menus and Navigation Level 1");
        checkboxMenusAndNavigation1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMenusAndNavigation1ActionPerformed(evt);
            }
        });

        checkboxMenusAndNavigation2.setText("Menus and Navigation Level 2");
        checkboxMenusAndNavigation2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMenusAndNavigation2ActionPerformed(evt);
            }
        });

        checkboxMenusAndNavigation3.setText("Menus and Navigation Level 3");
        checkboxMenusAndNavigation3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMenusAndNavigation3ActionPerformed(evt);
            }
        });

        checkboxNotifications1.setText("Notifications Level 1");
        checkboxNotifications1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxNotifications1ActionPerformed(evt);
            }
        });

        checkboxNotifications2.setText("Notifications Level 2");
        checkboxNotifications2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxNotifications2ActionPerformed(evt);
            }
        });

        checkboxNotifications3.setText("Notifications Level 3");
        checkboxNotifications3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxNotifications3ActionPerformed(evt);
            }
        });

        checkboxSearch1.setText("Search Level 1");
        checkboxSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSearch1ActionPerformed(evt);
            }
        });

        checkboxSearch2.setText("Search Level 2");
        checkboxSearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSearch2ActionPerformed(evt);
            }
        });

        checkboxSearch3.setText("Search Level 3");
        checkboxSearch3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSearch3ActionPerformed(evt);
            }
        });

        checkboxHardware1.setText("Hardware Level 1");
        checkboxHardware1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxHardware1ActionPerformed(evt);
            }
        });

        checkboxHardware2.setText("Hardware Level 2");
        checkboxHardware2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxHardware2ActionPerformed(evt);
            }
        });

        checkboxHardware3.setText("Hardware Level 3");
        checkboxHardware3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxHardware3ActionPerformed(evt);
            }
        });

        checkboxIntegration2.setText("Integration Level 2");
        checkboxIntegration2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxIntegration2ActionPerformed(evt);
            }
        });

        checkboxIntegration3.setText("Integration Level 3");
        checkboxIntegration3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxIntegration3ActionPerformed(evt);
            }
        });

        checkboxIntegration1.setText("Integration Level 1");
        checkboxIntegration1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxIntegration1ActionPerformed(evt);
            }
        });

        checkboxMultiUser2.setText("Multi-user Level 2");
        checkboxMultiUser2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMultiUser2ActionPerformed(evt);
            }
        });

        checkboxMultiUser3.setText("Multi-user Level 3");
        checkboxMultiUser3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMultiUser3ActionPerformed(evt);
            }
        });

        checkboxMultiUser1.setText("Multi-user Level 1");
        checkboxMultiUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMultiUser1ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/practerlogin/icons/webservices.png"))); // NOI18N

        checkboxStorage2.setText("Storage Level 2");
        checkboxStorage2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxStorage2ActionPerformed(evt);
            }
        });

        checkboxStorage3.setText("Storage Level 3");
        checkboxStorage3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxStorage3ActionPerformed(evt);
            }
        });

        checkboxMarketplace2.setText("Marketplace Level 2");
        checkboxMarketplace2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMarketplace2ActionPerformed(evt);
            }
        });

        checkboxMarketplace3.setText("Marketplace Level 3");
        checkboxMarketplace3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMarketplace3ActionPerformed(evt);
            }
        });

        checkboxMarketplace1.setText("Marketplace Level 1");
        checkboxMarketplace1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMarketplace1ActionPerformed(evt);
            }
        });

        checkboxAnalytics2.setText("Analytics Level 2");
        checkboxAnalytics2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAnalytics2ActionPerformed(evt);
            }
        });

        checkboxAnalytics3.setText("Analytics Level 3");
        checkboxAnalytics3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAnalytics3ActionPerformed(evt);
            }
        });

        checkboxAnalytics1.setText("Analytics Level 1");
        checkboxAnalytics1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAnalytics1ActionPerformed(evt);
            }
        });

        checkboxLocation1.setText("Location Level 1");
        checkboxLocation1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxLocation1ActionPerformed(evt);
            }
        });

        checkboxLocation2.setText("Location Level 2");
        checkboxLocation2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxLocation2ActionPerformed(evt);
            }
        });

        checkboxLocation3.setText("Location Level 3");
        checkboxLocation3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxLocation3ActionPerformed(evt);
            }
        });

        checkboxMedia1.setText("Media Level 1");
        checkboxMedia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMedia1ActionPerformed(evt);
            }
        });

        checkboxMedia2.setText("Media Level 2");
        checkboxMedia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMedia2ActionPerformed(evt);
            }
        });

        checkboxMedia3.setText("Media Level 3");
        checkboxMedia3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMedia3ActionPerformed(evt);
            }
        });

        checkboxSync1.setText("Sync Level 1");
        checkboxSync1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSync1ActionPerformed(evt);
            }
        });

        checkboxSync2.setText("Sync Level 2");
        checkboxSync2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSync2ActionPerformed(evt);
            }
        });

        checkboxSocial1.setText("Social Level 1");
        checkboxSocial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSocial1ActionPerformed(evt);
            }
        });

        checkboxSocial2.setText("Social Level 2");
        checkboxSocial2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSocial2ActionPerformed(evt);
            }
        });

        checkboxSocial3.setText("Social Level 3");
        checkboxSocial3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSocial3ActionPerformed(evt);
            }
        });

        checkboxSync3.setText("Sync Level 3");
        checkboxSync3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSync3ActionPerformed(evt);
            }
        });

        checkboxStorage1.setText("Storage Level 1");
        checkboxStorage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxStorage1ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/practerlogin/icons/infrastucture.png"))); // NOI18N

        checkboxExternalAPI3.setText("External API Level 3");
        checkboxExternalAPI3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxExternalAPI3ActionPerformed(evt);
            }
        });

        checkboxPrivacy1.setText("Privacy Level 1");
        checkboxPrivacy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxPrivacy1ActionPerformed(evt);
            }
        });

        checkboxPrivacy2.setText("Privacy Level 2");
        checkboxPrivacy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxPrivacy2ActionPerformed(evt);
            }
        });

        checkboxPrivacy3.setText("Privacy Level 3");
        checkboxPrivacy3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxPrivacy3ActionPerformed(evt);
            }
        });

        checkboxAnalyticsInfrastructure2.setText("Analytics Level 2");
        checkboxAnalyticsInfrastructure2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAnalyticsInfrastructure2ActionPerformed(evt);
            }
        });

        checkboxAnalyticsInfrastructure3.setText("Analytics Level 3");
        checkboxAnalyticsInfrastructure3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAnalyticsInfrastructure3ActionPerformed(evt);
            }
        });

        checkboxAnalyticsInfrastructure1.setText("Analytics Level 1");
        checkboxAnalyticsInfrastructure1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAnalyticsInfrastructure1ActionPerformed(evt);
            }
        });

        checkboxSecurity2.setText("Security Level 2");
        checkboxSecurity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSecurity2ActionPerformed(evt);
            }
        });

        checkboxSecurity3.setText("Security Level 3");
        checkboxSecurity3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSecurity3ActionPerformed(evt);
            }
        });

        checkboxSecurity1.setText("Security Level 1");
        checkboxSecurity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSecurity1ActionPerformed(evt);
            }
        });

        checkboxApplicationServer1.setText("Application Server Level 1");
        checkboxApplicationServer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxApplicationServer1ActionPerformed(evt);
            }
        });

        checkboxApplicationServer2.setText("Application Server Level 2");
        checkboxApplicationServer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxApplicationServer2ActionPerformed(evt);
            }
        });

        checkboxApplicationServer3.setText("Application Server Level 3");
        checkboxApplicationServer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxApplicationServer3ActionPerformed(evt);
            }
        });

        checkboxDatabaseServer1.setText("Database Server Level 1");
        checkboxDatabaseServer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxDatabaseServer1ActionPerformed(evt);
            }
        });

        checkboxDatabaseServer2.setText("Database Server Level 2");
        checkboxDatabaseServer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxDatabaseServer2ActionPerformed(evt);
            }
        });

        checkboxDatabaseServer3.setText("Database Server Level 3");
        checkboxDatabaseServer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxDatabaseServer3ActionPerformed(evt);
            }
        });

        checkboxExternalAPI1.setText("External API Level 1");
        checkboxExternalAPI1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxExternalAPI1ActionPerformed(evt);
            }
        });

        checkboxExternalAPI2.setText("External API Level 2");
        checkboxExternalAPI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxExternalAPI2ActionPerformed(evt);
            }
        });

        checkboxCode1.setText("Code Level 1");
        checkboxCode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxCode1ActionPerformed(evt);
            }
        });

        checkboxCode2.setText("Code Level 2");
        checkboxCode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxCode2ActionPerformed(evt);
            }
        });

        checkboxCode3.setText("Code Level 3");
        checkboxCode3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxCode3ActionPerformed(evt);
            }
        });

        buttonSubmitRound.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buttonSubmitRound.setText("Submit Round");
        buttonSubmitRound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSubmitRoundActionPerformed(evt);
            }
        });

        buttonLaunchApp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buttonLaunchApp.setText("Launch App");
        buttonLaunchApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLaunchAppActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Round: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Current Users: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Current Cash: ");

        tfRoundDisplay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfRoundDisplay.setText("1 / 15");

        tfCurrentUserDisplay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfCurrentUserDisplay.setText("0");

        tfCurrentCashDisplay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfCurrentCashDisplay.setText("$7500");

        buttonBuyPromotionCard.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonBuyPromotionCard.setText("Buy Promotion Card");
        buttonBuyPromotionCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuyPromotionCardActionPerformed(evt);
            }
        });

        buttonBuyMarketResearchCard.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonBuyMarketResearchCard.setText("Buy Market Research Card");
        buttonBuyMarketResearchCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuyMarketResearchCardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxUserInterface1)
                            .addComponent(checkboxUserInterface2)
                            .addComponent(checkboxUserInterface3))
                        .addGap(138, 138, 138)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxMenusAndNavigation1)
                            .addComponent(checkboxMenusAndNavigation2)
                            .addComponent(checkboxMenusAndNavigation3))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxNotifications1)
                            .addComponent(checkboxNotifications2)
                            .addComponent(checkboxNotifications3))
                        .addGap(145, 145, 145)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxSearch1)
                            .addComponent(checkboxSearch2)
                            .addComponent(checkboxSearch3))
                        .addGap(165, 165, 165)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxHardware1)
                            .addComponent(checkboxHardware2)
                            .addComponent(checkboxHardware3))
                        .addGap(150, 150, 150)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxIntegration1)
                            .addComponent(checkboxIntegration2)
                            .addComponent(checkboxIntegration3))
                        .addGap(139, 139, 139)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxMultiUser1)
                            .addComponent(checkboxMultiUser2)
                            .addComponent(checkboxMultiUser3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxSocial1)
                            .addComponent(checkboxSocial2)
                            .addComponent(checkboxSocial3))
                        .addGap(185, 185, 185)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxLocation1)
                            .addComponent(checkboxLocation2)
                            .addComponent(checkboxLocation3))
                        .addGap(155, 155, 155)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxMedia1)
                            .addComponent(checkboxMedia2)
                            .addComponent(checkboxMedia3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxSync1)
                            .addComponent(checkboxSync2)
                            .addComponent(checkboxSync3))
                        .addGap(172, 172, 172)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxStorage1)
                            .addComponent(checkboxStorage2)
                            .addComponent(checkboxStorage3))
                        .addGap(157, 157, 157)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxMarketplace1)
                            .addComponent(checkboxMarketplace2)
                            .addComponent(checkboxMarketplace3))
                        .addGap(137, 137, 137)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxAnalytics1)
                            .addComponent(checkboxAnalytics2)
                            .addComponent(checkboxAnalytics3))
                        .addGap(156, 156, 156))
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxCode1)
                            .addComponent(checkboxCode2)
                            .addComponent(checkboxCode3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(buttonBuyMarketResearchCard, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(buttonBuyPromotionCard, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(checkboxApplicationServer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkboxApplicationServer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkboxApplicationServer3))
                                .addGap(158, 158, 158)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkboxDatabaseServer1)
                                    .addComponent(checkboxDatabaseServer2)
                                    .addComponent(checkboxDatabaseServer3))
                                .addGap(70, 70, 70)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkboxExternalAPI1)
                                    .addComponent(checkboxExternalAPI2)
                                    .addComponent(checkboxExternalAPI3))
                                .addGap(139, 139, 139)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkboxPrivacy1)
                                    .addComponent(checkboxPrivacy2)
                                    .addComponent(checkboxPrivacy3)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buttonSubmitRound, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(buttonLaunchApp, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(tfRoundDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkboxAnalyticsInfrastructure1)
                                    .addComponent(checkboxAnalyticsInfrastructure2)
                                    .addComponent(checkboxAnalyticsInfrastructure3))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCurrentUserDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfCurrentCashDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkboxSecurity1)
                            .addComponent(checkboxSecurity2)
                            .addComponent(checkboxSecurity3))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxUserInterface1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxUserInterface2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxUserInterface3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxMenusAndNavigation1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMenusAndNavigation2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMenusAndNavigation3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxNotifications1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxNotifications2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxNotifications3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxSearch1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSearch2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSearch3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxHardware1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxHardware2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxHardware3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxIntegration1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxIntegration2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxIntegration3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxMultiUser1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMultiUser2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMultiUser3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxSocial1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSocial2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSocial3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxLocation1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxLocation2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxLocation3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxMedia1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMedia2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMedia3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxSync1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSync2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSync3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxStorage1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxStorage2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxStorage3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxMarketplace1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMarketplace2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxMarketplace3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxAnalytics1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxAnalytics2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxAnalytics3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxCode1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxCode2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxCode3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxApplicationServer1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxApplicationServer2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxApplicationServer3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxDatabaseServer1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxDatabaseServer2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxDatabaseServer3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxPrivacy1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxPrivacy2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxPrivacy3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxAnalyticsInfrastructure1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxAnalyticsInfrastructure2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxAnalyticsInfrastructure3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkboxSecurity1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSecurity2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxSecurity3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(checkboxExternalAPI2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkboxExternalAPI3))
                    .addComponent(checkboxExternalAPI1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfCurrentCashDisplay)
                    .addComponent(buttonSubmitRound, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonLaunchApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfRoundDisplay)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfCurrentUserDisplay)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonBuyPromotionCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonBuyMarketResearchCard, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkboxUserInterface1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxUserInterface1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 200 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxUserInterface1ActionPerformed

    private void checkboxUserInterface3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxUserInterface3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxUserInterface2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need User Interface level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxUserInterface3.setSelected(false);
        }
        else if(!checkboxHardware1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Hardware level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxUserInterface3.setSelected(false);
        }else{
            totalUserCash -= 200 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxUserInterface3ActionPerformed

    private void checkboxMenusAndNavigation1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMenusAndNavigation1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 300 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxMenusAndNavigation1ActionPerformed

    private void checkboxMenusAndNavigation3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMenusAndNavigation3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMenusAndNavigation2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Menus and Navigation level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMenusAndNavigation3.setSelected(false);
        }
        else if(!checkboxSearch1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Search level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMenusAndNavigation3.setSelected(false);
        }else{
            totalUserCash -= 300 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMenusAndNavigation3ActionPerformed

    private void checkboxNotifications1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxNotifications1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 400 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxNotifications1ActionPerformed

    private void checkboxNotifications3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxNotifications3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxNotifications2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Notification level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxNotifications3.setSelected(false);
        }
        else if(!checkboxSocial1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Social level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxNotifications3.setSelected(false);
        }else{
            earnedUsersByRound++;
            totalUserCash -= 400 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxNotifications3ActionPerformed

    private void checkboxSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSearch1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 600 + codeDiscount;
        complexityCounter++;
    }//GEN-LAST:event_checkboxSearch1ActionPerformed

    private void checkboxSearch3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSearch3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSearch2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Search level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSearch3.setSelected(false);
        }
        else if(!checkboxDatabaseServer1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Database Server level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSearch3.setSelected(false);
        }else{
            totalUserCash -= 600 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxSearch3ActionPerformed

    private void checkboxHardware1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxHardware1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 800 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxHardware1ActionPerformed

    private void checkboxHardware3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxHardware3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxHardware2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Search Hardware 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxHardware3.setSelected(false);
        }
        else if(!checkboxIntegration2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxHardware3.setSelected(false);
        }else{
            totalUserCash -= 800 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxHardware3ActionPerformed

    private void checkboxIntegration3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxIntegration3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxIntegration2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Integration level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxIntegration3.setSelected(false);
        }
        else if((!checkboxExternalAPI2.isSelected()) || (!checkboxCode2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need External API level 2 and Code level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxIntegration3.setSelected(false);
        }else{
            totalUserCash -= 1000 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxIntegration3ActionPerformed

    private void checkboxIntegration1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxIntegration1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 1000 + codeDiscount;
        complexityCounter++;
    }//GEN-LAST:event_checkboxIntegration1ActionPerformed

    private void checkboxMultiUser3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMultiUser3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMultiUser3.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Multi-user level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMultiUser3.setSelected(false);
        }
        else if((!checkboxDatabaseServer2.isSelected()) || (!checkboxApplicationServer2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need Database Server level 2 and App-Server 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMultiUser3.setSelected(false);
        }else{
            totalUserCash -= 1500 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMultiUser3ActionPerformed

    private void checkboxMultiUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMultiUser1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 1500 + codeDiscount;
        complexityCounter++;
    }//GEN-LAST:event_checkboxMultiUser1ActionPerformed

    private void checkboxMaN4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMaN4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxMaN4ActionPerformed

    private void checkboxH5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxH5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxH5ActionPerformed

    private void checkboxMaN6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMaN6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxMaN6ActionPerformed

    private void checkboxI5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxI5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxI5ActionPerformed

    private void checkboxN4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxN4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxN4ActionPerformed

    private void checkboxI6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxI6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxI6ActionPerformed

    private void checkboxN6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxN6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxN6ActionPerformed

    private void checkboxMU5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMU5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxMU5ActionPerformed

    private void checkboxS4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxS4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxS4ActionPerformed

    private void checkboxMU6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMU6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxMU6ActionPerformed

    private void checkboxUI4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxUI4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxUI4ActionPerformed

    private void checkboxUI6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxUI6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxUI6ActionPerformed

    private void checkboxS6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxS6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxS6ActionPerformed

    private void checkboxH6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxH6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxH6ActionPerformed

    private void checkboxStorage3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxStorage3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxStorage2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Storage level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxStorage3.setSelected(false);
        }
        else if(!checkboxCode2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Code level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxStorage3.setSelected(false);
        }else{
            totalUserCash -= 800 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxStorage3ActionPerformed

    private void checkboxMarketplace3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMarketplace3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMarketplace2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Marketplace level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMarketplace3.setSelected(false);
        }
        else if(!checkboxCode2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Code level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMarketplace3.setSelected(false);
        }else{
            totalUserCash -= 1000 + codeDiscount;
            cashBonus += .20;
        }
    }//GEN-LAST:event_checkboxMarketplace3ActionPerformed

    private void checkboxMarketplace1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMarketplace1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 1000 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
        earnedCashByRound++;
    }//GEN-LAST:event_checkboxMarketplace1ActionPerformed

    private void checkboxAnalytics3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAnalytics3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxAnalytics2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Analytics level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalytics3.setSelected(false);
        }
        else if((!checkboxDatabaseServer1.isSelected()) || (!checkboxApplicationServer1.isSelected())){
        JOptionPane.showMessageDialog(this, "You need Database Server level 1 and App-Server 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalytics3.setSelected(false);
        }
        else{
            //add users + 10%
            techUserBonus += .10;
            earnedCashByRound++;
            totalUserCash -= 1500 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxAnalytics3ActionPerformed

    private void checkboxAnalytics1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAnalytics1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 1500 + codeDiscount;
        complexityCounter++;
        earnedCashByRound++;
    }//GEN-LAST:event_checkboxAnalytics1ActionPerformed

    private void checkboxLocation1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxLocation1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 300 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxLocation1ActionPerformed

    private void checkboxLocation3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxLocation3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxLocation2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Location level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxLocation3.setSelected(false);
        }
        else if(!checkboxIntegration2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxLocation3.setSelected(false);
        }else{
            totalUserCash -= 300 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxLocation3ActionPerformed

    private void checkboxMedia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMedia1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 400 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxMedia1ActionPerformed

    private void checkboxMedia3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMedia3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMedia2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Media level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMedia3.setSelected(false);
        }
        else if((!checkboxIntegration2.isSelected()) || (!checkboxHardware2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need Integration level 2 and Hardware 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMedia3.setSelected(false);
        }else{
            totalUserCash -= 400 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMedia3ActionPerformed

    private void checkboxSync1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSync1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 600 + codeDiscount;
        complexityCounter++;
    }//GEN-LAST:event_checkboxSync1ActionPerformed

    private void checkboxSocial1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSocial1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 200 + codeDiscount;
        earnedUsersByRound++;
        complexityCounter++;
    }//GEN-LAST:event_checkboxSocial1ActionPerformed

    private void checkboxSocial3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSocial3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSocial2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Social level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSocial3.setSelected(false);
        }
        else if(!checkboxIntegration2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSocial3.setSelected(false);
        }else{
            earnedUsersByRound++;
            totalUserCash -= 200 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxSocial3ActionPerformed

    private void checkboxSync3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSync3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSync2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Sync level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSync3.setSelected(false);
        }
        else if(!checkboxIntegration2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSync3.setSelected(false);
        }else{
            totalUserCash -= 600 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxSync3ActionPerformed

    private void checkboxStorage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxStorage1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 800 + codeDiscount;
        complexityCounter++;
    }//GEN-LAST:event_checkboxStorage1ActionPerformed

    private void checkboxStorage2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxStorage2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxStorage1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Storage level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxStorage2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxStorage2.setSelected(false);
        }else{
            totalUserCash -= 800 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxStorage2ActionPerformed

    private void checkboxExternalAPI3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxExternalAPI3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxExternalAPI2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need External API level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxExternalAPI3.setSelected(false);
        }
        else if(!checkboxCode3.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Code level 3 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxExternalAPI3.setSelected(false);
        }
        else{
        // Users + 20%
        techUserBonus += .20;
        totalUserCash -= 600 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxExternalAPI3ActionPerformed

    private void checkboxPrivacy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxPrivacy1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 800 + codeDiscount + appDiscount + dbDiscount;
    }//GEN-LAST:event_checkboxPrivacy1ActionPerformed

    private void checkboxPrivacy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxPrivacy2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxPrivacy1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Privacy level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxPrivacy2.setSelected(false);
        }
        else{
        // Users + 10%
        techUserBonus += .10;
        totalUserCash -= 800 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxPrivacy2ActionPerformed

    private void checkboxPrivacy3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxPrivacy3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxPrivacy2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Privacy level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxPrivacy3.setSelected(false);
        }
        else if((!checkboxApplicationServer2.isSelected()) || (!checkboxDatabaseServer2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need App Server level 2 and Database Server 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxPrivacy3.setSelected(false);
        }else{
            // users + 20%
            techUserBonus += .20;
            totalUserCash -= 800 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxPrivacy3ActionPerformed

    private void checkboxAnalyticsInfrastructure3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAnalyticsInfrastructure3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxAnalyticsInfrastructure2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Analytics Infrastructure level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalyticsInfrastructure3.setSelected(false);
        }
        else if((!checkboxApplicationServer3.isSelected()) || (!checkboxDatabaseServer3.isSelected())){
        JOptionPane.showMessageDialog(this, "You need App Server level 3 and Database Server 3 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalyticsInfrastructure3.setSelected(false);
        }else{
            // users + 20%
            techUserBonus += .20;
            earnedCashByRound++;
            totalUserCash -= 1000 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxAnalyticsInfrastructure3ActionPerformed

    private void checkboxAnalyticsInfrastructure1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAnalyticsInfrastructure1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 1000 + codeDiscount + appDiscount + dbDiscount;
        earnedCashByRound++;
    }//GEN-LAST:event_checkboxAnalyticsInfrastructure1ActionPerformed

    private void checkboxSecurity3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSecurity3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSecurity2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Security level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSecurity3.setSelected(false);
        }
        else if((!checkboxApplicationServer3.isSelected()) || (!checkboxDatabaseServer3.isSelected())){
        JOptionPane.showMessageDialog(this, "You need App Server level 3 and Database Server 3 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSecurity3.setSelected(false);
        }else{
            // users + 20%
            techUserBonus += .20;
            totalUserCash -= 1500 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxSecurity3ActionPerformed

    private void checkboxSecurity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSecurity1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 1500 + codeDiscount + appDiscount + dbDiscount;
        earnedCashByRound++;
    }//GEN-LAST:event_checkboxSecurity1ActionPerformed

    private void checkboxApplicationServer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxApplicationServer1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 300 + codeDiscount + appDiscount + dbDiscount;
    }//GEN-LAST:event_checkboxApplicationServer1ActionPerformed

    private void checkboxApplicationServer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxApplicationServer3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxApplicationServer2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Application Server level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxApplicationServer2.setSelected(false);
        }else{
        appDiscount = -200;
        totalUserCash -= 300 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxApplicationServer3ActionPerformed

    private void checkboxDatabaseServer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxDatabaseServer1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 400 + codeDiscount + appDiscount + dbDiscount;
    }//GEN-LAST:event_checkboxDatabaseServer1ActionPerformed

    private void checkboxDatabaseServer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxDatabaseServer3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxDatabaseServer2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Database Server level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxDatabaseServer3.setSelected(false);
        }
        else if(!checkboxCode3.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Code level 3 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxDatabaseServer3.setSelected(false);
        }
        else{
        dbDiscount = -200;
        totalUserCash -= 400 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxDatabaseServer3ActionPerformed

    private void checkboxExternalAPI1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxExternalAPI1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 600 + codeDiscount + appDiscount + dbDiscount;
    }//GEN-LAST:event_checkboxExternalAPI1ActionPerformed

    private void checkboxCode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxCode1ActionPerformed
        // TODO add your handling code here:
        totalUserCash -= 200 + codeDiscount + appDiscount + dbDiscount;
    }//GEN-LAST:event_checkboxCode1ActionPerformed

    private void checkboxCode3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxCode3ActionPerformed
        // TODO add your handling code here:
        if(!checkboxCode2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Code level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxCode3.setSelected(false);
        }
        else if((!checkboxApplicationServer2.isSelected()) || (!checkboxDatabaseServer2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need App-Server level 2 and Database Server level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxCode3.setSelected(false);
        }
        else{
        codeDiscount = +100;
        totalUserCash -= 200 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxCode3ActionPerformed

    private void checkboxCode2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxCode2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxCode1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Code level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxCode2.setSelected(false);
        }else{
            codeDiscount = -100;
            totalUserCash -= 200 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxCode2ActionPerformed

    private void checkboxSecurity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSecurity2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSecurity1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Security level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSecurity2.setSelected(false);
        }
        else if((!checkboxApplicationServer2.isSelected()) || (!checkboxDatabaseServer2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need App Server level 2 and Database Server 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSecurity2.setSelected(false);
        }else{
            // users + 10%
            techUserBonus += .10;
            totalUserCash -= 1500 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxSecurity2ActionPerformed

    private void buttonSubmitRoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSubmitRoundActionPerformed
        // TODO add your handling code here:
        ++roundCounter; //Increase the round counter variable by one when user marks a new round starting
        if(roundCounter > 15 || totalUserCash <= 0){
            JOptionPane.showMessageDialog(this, "You have either reached the end of the game or dont have any more money to continue playing", "GAME OVER", JOptionPane.INFORMATION_MESSAGE);
            try {
                finishGame();
            } catch (IOException ex) {
                Logger.getLogger(GameMainPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
        tfRoundDisplay.setText(roundCounter + " / 15");
        tfCurrentCashDisplay.setText("$" + String.valueOf(totalUserCash));
        }
        
    }//GEN-LAST:event_buttonSubmitRoundActionPerformed

    private void buttonBuyMarketResearchCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuyMarketResearchCardActionPerformed
        String[] marketResearch = new String[9];
        marketResearch[0] = " You have a productive requirements session with the client, in which they emphasise the importance of analytics \n" +
                " Analytics will let them deliver dynamic ‘personalised’ experiences, and / or link to rich datasets.";
        marketResearch[1] = " Your prototyping reveals that teens respond really well to social media connectivity as an app feature. \n" +
                " Teens want to be able to access many key social platform features from within your app. ";
        marketResearch[2] = " Your prototyping reveals that teens respond very strong to an app that delivers push 'notifications'. \n" +
                " Your teen users don't just want alerts they want integration of social activity, events, and messages. ";
        marketResearch[3] = " Requirments workshops with the client reveal that the marketplace feature is important. \n" +
                " In-App purchases are seen as an essential capability for driving revenue. ";
        marketResearch[4] = " The client's IT department has become very concerned about the security of user data. \n" +
                " They are demanding a basic level of server secuirty. "; 
        marketResearch[5] = " Your prototyping shows you that 'location' awareness would be an important app feature for use in car. \n" +
                " Bi-directional communication is important - the app needs to know where the car is to be relevant.";
        marketResearch[6] = " The design team tells you that the marketplace feature is important for the shopping apps. \n" +
                "Being able to make purchases directly within the app is essential. ";
        marketResearch[7] = " Your rapid prototyping has convinced you that the quality of the interface app is a really important feature for an app. \n" +
                " Custom 2D interfaces are more compelling than simple text interfaces; customers are ambivalent about 3D. ";
        marketResearch[8] = " You've learned that simple is better with app design and too many features turns off some users. \n" +
                " If your app has more than 5 front-end or service technologies, each additional one will incur a 10% user penalty.";
       
        Random random = new Random();
        int randomNumber = random.nextInt(9);
        
        if(totalUserCash - 300 < 0){
            JOptionPane.showMessageDialog(this, "You do not have enough money to buy a Market Research Card", "Not Enough balance", JOptionPane.ERROR_MESSAGE);
        }
        else if (marketResearchCounter < 9){
            while(noRepeatsMR.contains(randomNumber)){
            randomNumber = random.nextInt(12);
            }
            noRepeatsMR.add(randomNumber);
            JOptionPane.showMessageDialog(this, marketResearch[marketResearchCounter], "Market Research Card", JOptionPane.INFORMATION_MESSAGE);
            marketResearchCounter++;
            totalUserCash -= 300;
            tfCurrentCashDisplay.setText("$" + String.valueOf(totalUserCash));
        }
        else{
            JOptionPane.showMessageDialog(this, "There is no more Market Research Cards available", "Out of Market Research Cards", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonBuyMarketResearchCardActionPerformed

    private void buttonBuyPromotionCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuyPromotionCardActionPerformed
        String[] promotion = new String[12];
        promotion[0] = " Great marketing campaign. \n" +
                " +10% users each round";
        promotion[1] = " Great marketing campaign. \n" +
                " +20% users each round";
        promotion[2] = " You figure out a good app distribution strategy to reach your audience. \n" +
                " +10% users each round ";
        promotion[3] = " Your pricing model isn't working. \n" +
                " -20% users each round ";
        promotion[4] = " Great launch PR! \n" +
                " Your launch round bonus is doubled to 100% "; 
        promotion[5] = " An insensitive marketing campaign alienates a demographic group \n" +
                " -10% users each round ";
        promotion[6] = " Ok marketing campaign \n" +
                " +5% users each round ";
        promotion[7] = " Ok marketing campaign \n" +
                " +5% users each round ";
        promotion[8] = " You go viral!!! \n" +
                " +100% users for next two rounds";
        promotion[9] = " Unremarkable marketing campaign. \n" +
                " No effect";
        promotion[10] = " Unremarkable marketing campaign. \n" +
                " No effect";
        promotion[11] = " Search engine optimisation fails. \n" +
                " No effect";
        
        Random random = new Random();
        int randomNumber = random.nextInt(12);
        
        
        
        if(totalUserCash - 1000 < 0){
            JOptionPane.showMessageDialog(this, "You do not have enough money to buy a Market Research Card", "Not Enough balance", JOptionPane.ERROR_MESSAGE);
        }
        else if (promotionCounter < 12){
            while(noRepeatsPromotion.contains(randomNumber)){
            randomNumber = random.nextInt(12);
            }
            noRepeatsPromotion.add(randomNumber);
            JOptionPane.showMessageDialog(this, promotion[randomNumber], "Promotion Card", JOptionPane.INFORMATION_MESSAGE);
            totalUserCash -= 1000;
            tfCurrentCashDisplay.setText("$" + String.valueOf(totalUserCash));
            switch(randomNumber){
                case 0:
                    promotionBonus += .10;
                    break;
                case 1:
                    promotionBonus += .20;
                    break;
                case 2:
                    promotionBonus += .10;
                    break;
                case 3:
                    promotionBonus -= .20;
                    break;
                case 4:
                    launchBonus += 1;
                    break;
                case 5:
                    promotionBonus -= .10;
                    break;
                case 6:
                    promotionBonus += .05;
                    break;
                case 7:
                    promotionBonus += .05;
                    break;
                case 8:
                    promotionBonus += 2;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                case 11:
                    break;
            }
            promotionCounter++;
        }
        else{
            JOptionPane.showMessageDialog(this, "There is no more Promotion Cards available", "Out of Promotion Cards", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonBuyPromotionCardActionPerformed

    private void checkboxApplicationServer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxApplicationServer2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxApplicationServer1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Application Server level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxApplicationServer2.setSelected(false);
        }else{
        appDiscount = -100;
        totalUserCash -= 300 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxApplicationServer2ActionPerformed

    private void checkboxDatabaseServer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxDatabaseServer2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxDatabaseServer1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Database Server level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxDatabaseServer2.setSelected(false);
        }
        else if(!checkboxApplicationServer2.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Application Server level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxDatabaseServer2.setSelected(false);
        }
        else{
        dbDiscount = -100;
        totalUserCash -= 400 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxDatabaseServer2ActionPerformed

    private void checkboxMenusAndNavigation2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMenusAndNavigation2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMenusAndNavigation1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Menus and Navigation level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMenusAndNavigation2.setSelected(false);
        }
        else if(!checkboxHardware1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Hardware level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMenusAndNavigation2.setSelected(false);
        }else{
            totalUserCash -= 300 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMenusAndNavigation2ActionPerformed

    private void checkboxUserInterface2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxUserInterface2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxUserInterface1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need User Interface level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxUserInterface2.setSelected(false);
        }else{
            earnedUsersByRound++;
            totalUserCash -= 200 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxUserInterface2ActionPerformed

    private void checkboxNotifications2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxNotifications2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxNotifications1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Notifications level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxNotifications2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
            checkboxNotifications2.setSelected(false);
        }else{
            earnedUsersByRound++;
            totalUserCash -= 400 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxNotifications2ActionPerformed

    private void checkboxSearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSearch2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSearch1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Search level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSearch2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
            checkboxSearch2.setSelected(false);
        }else{
            totalUserCash -= 600 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxSearch2ActionPerformed

    private void checkboxHardware2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxHardware2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxHardware1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Hardware level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxHardware2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxHardware2.setSelected(false);
        }else{
            totalUserCash -= 800 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxHardware2ActionPerformed

    private void checkboxIntegration2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxIntegration2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxIntegration1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxIntegration2.setSelected(false);
        }
        else if(!checkboxExternalAPI1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need External API level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxIntegration2.setSelected(false);
        }else{
            totalUserCash -= 1000 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxIntegration2ActionPerformed

    private void checkboxMultiUser2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMultiUser2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMultiUser1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Multi-user level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMultiUser2.setSelected(false);
        }
        else if((!checkboxIntegration1.isSelected()) || (!checkboxNotifications1.isSelected())){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 and Notifications 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMultiUser2.setSelected(false);
        }else{
            totalUserCash -= 1500 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMultiUser2ActionPerformed

    private void checkboxMedia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMedia2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMedia1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Media level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMedia2.setSelected(false);
        }
        else if((!checkboxIntegration1.isSelected()) || (!checkboxHardware1.isSelected())){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 and Hardware 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMedia2.setSelected(false);
        }else{
            totalUserCash -= 400 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMedia2ActionPerformed

    private void checkboxMarketplace2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMarketplace2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxMarketplace1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Marketplace level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMarketplace2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxMarketplace2.setSelected(false);
        }else{
            earnedUsersByRound++;
            earnedCashByRound++;
            cashBonus += .10;
            totalUserCash -= 1000 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxMarketplace2ActionPerformed

    private void checkboxSync2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSync2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSync1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Sync level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSync2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSync2.setSelected(false);
        }else{
            totalUserCash -= 600 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxSync2ActionPerformed

    private void checkboxAnalytics2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAnalytics2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxAnalytics1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Analytics level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalytics2.setSelected(false);
        }
        else if(!checkboxCode2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Code level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalytics2.setSelected(false);
        }
        else{
            //add users + 5%
            techUserBonus += .05;
            earnedCashByRound++;
            totalUserCash -= 1500 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxAnalytics2ActionPerformed

    private void checkboxSocial2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSocial2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxSocial1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Social level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSocial2.setSelected(false);
        }
        else if(!checkboxIntegration1.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxSocial2.setSelected(false);
        }else{
            earnedUsersByRound++;
            totalUserCash -= 200 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxSocial2ActionPerformed

    private void checkboxLocation2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxLocation2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxLocation1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Location level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxLocation2.setSelected(false);
        }
        else if((!checkboxIntegration1.isSelected()) || (!checkboxHardware1.isSelected())){
        JOptionPane.showMessageDialog(this, "You need Integration level 1 and Hardware 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxLocation2.setSelected(false);
        }else{
            earnedUsersByRound++;
            totalUserCash -= 300 + codeDiscount;
        }
    }//GEN-LAST:event_checkboxLocation2ActionPerformed

    private void checkboxExternalAPI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxExternalAPI2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxExternalAPI1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need External API level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxExternalAPI2.setSelected(false);
        }
        else if(!checkboxCode2.isSelected()){
        JOptionPane.showMessageDialog(this, "You need Code level 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxExternalAPI2.setSelected(false);
        }
        else{
        // Users + 10%
        techUserBonus += .10;
        totalUserCash -= 600 + codeDiscount + appDiscount + dbDiscount;
        }
    }//GEN-LAST:event_checkboxExternalAPI2ActionPerformed

    private void checkboxAnalyticsInfrastructure2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAnalyticsInfrastructure2ActionPerformed
        // TODO add your handling code here:
        if(!checkboxAnalyticsInfrastructure1.isSelected()){
            JOptionPane.showMessageDialog(this, "You need Analytics Infrastructure level 1 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalyticsInfrastructure2.setSelected(false);
        }
        else if((!checkboxApplicationServer2.isSelected()) || (!checkboxDatabaseServer2.isSelected())){
        JOptionPane.showMessageDialog(this, "You need App Server level 2 and Database Server 2 to upgrade this card.", "Doesnt meet requirments", JOptionPane.ERROR_MESSAGE);
        checkboxAnalyticsInfrastructure2.setSelected(false);
        }else{
            // users + 10%
            techUserBonus += .10;
            totalUserCash -= 1000 + codeDiscount + appDiscount + dbDiscount;
            earnedCashByRound++;
        }
    }//GEN-LAST:event_checkboxAnalyticsInfrastructure2ActionPerformed

    private void buttonLaunchAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLaunchAppActionPerformed
        // TODO add your handling code here:
        
        if(!(checkboxCode1.isSelected() && checkboxUserInterface1.isSelected() && checkboxApplicationServer1.isSelected())){
            JOptionPane.showMessageDialog(this, "You need Code Level 1, User Interface Level 1, and Application Server Level 1 to launch your app.", "Invalid Move", JOptionPane.ERROR_MESSAGE);
            return;
        }//finish coding this ^ 
        
        if(complexityCounter > 5){
            complexityCounter -= 5;
            complexityPenalty = -(complexityCounter / 10);
        }
        
        
        if(appLaunched == true){
            JOptionPane.showMessageDialog(this, "App can only be launched once a game", "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        else if(roundCounter >= 15){
            JOptionPane.showMessageDialog(this, "App can only be launched before round 15", "Invalid Move", JOptionPane.ERROR_MESSAGE);
        }
        else{
            ++roundCounter;
          users = earnedUsersByRound * (1+(techUserBonus + complexityPenalty + promotionBonus))* 1 * (1 + launchBonus) * 1000;
          double cashEarned = earnedCashByRound * (1 + cashBonus) * 1 * users;
          totalUserCash += cashEarned;
          tfCurrentUserDisplay.setText(String.valueOf((int)users));
          tfCurrentCashDisplay.setText("$" + String.valueOf(totalUserCash));
          tfRoundDisplay.setText(roundCounter + " / 15");
          appLaunched = true; 
        }
    }//GEN-LAST:event_buttonLaunchAppActionPerformed

    private void finishGame() throws FileNotFoundException, IOException{
        try{
           int highscore = 0, highscoreUsers = 0;
           boolean newHighScore = false;
           File fr = new File("C:\\Users\\xxlui\\Documents\\NetBeansProjects\\ProjectFinal CSC285\\PracteraProject 0.0.04\\PracteraLogin\\src\\practeralogin\\highscore.txt");
          // File outputFile = new File("C:\\Users\\xxlui\\Documents\\NetBeansProjects\\Calculation\\src\\main\\java\\hsResult.txt");
           Scanner scn  = new Scanner(fr);
           
           while(scn.hasNext()){
               highscore = Integer.valueOf(scn.nextLine());
               highscoreUsers = Integer.valueOf(scn.nextLine());
           }
           scn.close();
            System.out.println("HighScore Result : " + highscoreUsers + "and " + highscore);
            
        
           if((int)users > highscoreUsers){
               totalUserCash += 45000;
           }
           System.out.println("Current Result : " + users + "and " + totalUserCash);
           
           if(highscore < totalUserCash){
               BufferedWriter bw = new BufferedWriter(new FileWriter(fr));
               
                  bw.write(Integer.toString(totalUserCash));
                  bw.newLine();
                  bw.write(Integer.toString((int) users));
                  System.out.println("Result is:"+ totalUserCash + " and "+ (int)users);
                  newHighScore = true;
                  bw.flush();
                  bw.close();
           }

           if(newHighScore == true){
               dispose();
               pm.dispose();
               WinnerScreen ws = new WinnerScreen(totalUserCash, (int)users);
               ws.setLocationRelativeTo(null);
               ws.setTitle("CONGRATULATIONS NEW HIGH SCORE!!!");
               ws.setVisible(true);
           }
           else{
               dispose();
               pm.dispose();
               LoserScreen ls = new LoserScreen(highscore, highscoreUsers, totalUserCash, (int)users);
               ls.setLocationRelativeTo(null);
               ls.setTitle("Better luck next time :(");
               ls.setVisible(true);

           }

       }
       catch(FileNotFoundException e){
       }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameMainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuyMarketResearchCard;
    private javax.swing.JButton buttonBuyPromotionCard;
    private javax.swing.JButton buttonLaunchApp;
    private javax.swing.JButton buttonSubmitRound;
    private javax.swing.JCheckBox checkboxAnalytics1;
    private javax.swing.JCheckBox checkboxAnalytics2;
    private javax.swing.JCheckBox checkboxAnalytics3;
    private javax.swing.JCheckBox checkboxAnalyticsInfrastructure1;
    private javax.swing.JCheckBox checkboxAnalyticsInfrastructure2;
    private javax.swing.JCheckBox checkboxAnalyticsInfrastructure3;
    private javax.swing.JCheckBox checkboxApplicationServer1;
    private javax.swing.JCheckBox checkboxApplicationServer2;
    private javax.swing.JCheckBox checkboxApplicationServer3;
    private javax.swing.JCheckBox checkboxCode1;
    private javax.swing.JCheckBox checkboxCode2;
    private javax.swing.JCheckBox checkboxCode3;
    private javax.swing.JCheckBox checkboxDatabaseServer1;
    private javax.swing.JCheckBox checkboxDatabaseServer2;
    private javax.swing.JCheckBox checkboxDatabaseServer3;
    private javax.swing.JCheckBox checkboxExternalAPI1;
    private javax.swing.JCheckBox checkboxExternalAPI2;
    private javax.swing.JCheckBox checkboxExternalAPI3;
    private javax.swing.JCheckBox checkboxH4;
    private javax.swing.JCheckBox checkboxH5;
    private javax.swing.JCheckBox checkboxH6;
    private javax.swing.JCheckBox checkboxHardware1;
    private javax.swing.JCheckBox checkboxHardware2;
    private javax.swing.JCheckBox checkboxHardware3;
    private javax.swing.JCheckBox checkboxI4;
    private javax.swing.JCheckBox checkboxI5;
    private javax.swing.JCheckBox checkboxI6;
    private javax.swing.JCheckBox checkboxIntegration1;
    private javax.swing.JCheckBox checkboxIntegration2;
    private javax.swing.JCheckBox checkboxIntegration3;
    private javax.swing.JCheckBox checkboxLocation1;
    private javax.swing.JCheckBox checkboxLocation2;
    private javax.swing.JCheckBox checkboxLocation3;
    private javax.swing.JCheckBox checkboxMU4;
    private javax.swing.JCheckBox checkboxMU5;
    private javax.swing.JCheckBox checkboxMU6;
    private javax.swing.JCheckBox checkboxMaN4;
    private javax.swing.JCheckBox checkboxMaN5;
    private javax.swing.JCheckBox checkboxMaN6;
    private javax.swing.JCheckBox checkboxMarketplace1;
    private javax.swing.JCheckBox checkboxMarketplace2;
    private javax.swing.JCheckBox checkboxMarketplace3;
    private javax.swing.JCheckBox checkboxMedia1;
    private javax.swing.JCheckBox checkboxMedia2;
    private javax.swing.JCheckBox checkboxMedia3;
    private javax.swing.JCheckBox checkboxMenusAndNavigation1;
    private javax.swing.JCheckBox checkboxMenusAndNavigation2;
    private javax.swing.JCheckBox checkboxMenusAndNavigation3;
    private javax.swing.JCheckBox checkboxMultiUser1;
    private javax.swing.JCheckBox checkboxMultiUser2;
    private javax.swing.JCheckBox checkboxMultiUser3;
    private javax.swing.JCheckBox checkboxN4;
    private javax.swing.JCheckBox checkboxN5;
    private javax.swing.JCheckBox checkboxN6;
    private javax.swing.JCheckBox checkboxNotifications1;
    private javax.swing.JCheckBox checkboxNotifications2;
    private javax.swing.JCheckBox checkboxNotifications3;
    private javax.swing.JCheckBox checkboxPrivacy1;
    private javax.swing.JCheckBox checkboxPrivacy2;
    private javax.swing.JCheckBox checkboxPrivacy3;
    private javax.swing.JCheckBox checkboxS4;
    private javax.swing.JCheckBox checkboxS5;
    private javax.swing.JCheckBox checkboxS6;
    private javax.swing.JCheckBox checkboxSearch1;
    private javax.swing.JCheckBox checkboxSearch2;
    private javax.swing.JCheckBox checkboxSearch3;
    private javax.swing.JCheckBox checkboxSecurity1;
    private javax.swing.JCheckBox checkboxSecurity2;
    private javax.swing.JCheckBox checkboxSecurity3;
    private javax.swing.JCheckBox checkboxSocial1;
    private javax.swing.JCheckBox checkboxSocial2;
    private javax.swing.JCheckBox checkboxSocial3;
    private javax.swing.JCheckBox checkboxStorage1;
    private javax.swing.JCheckBox checkboxStorage2;
    private javax.swing.JCheckBox checkboxStorage3;
    private javax.swing.JCheckBox checkboxSync1;
    private javax.swing.JCheckBox checkboxSync2;
    private javax.swing.JCheckBox checkboxSync3;
    private javax.swing.JCheckBox checkboxUI4;
    private javax.swing.JCheckBox checkboxUI5;
    private javax.swing.JCheckBox checkboxUI6;
    private javax.swing.JCheckBox checkboxUserInterface1;
    private javax.swing.JCheckBox checkboxUserInterface2;
    private javax.swing.JCheckBox checkboxUserInterface3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tfCurrentCashDisplay;
    private javax.swing.JTextField tfCurrentUserDisplay;
    private javax.swing.JTextField tfRoundDisplay;
    // End of variables declaration//GEN-END:variables
}
